apiVersion: v1
kind: Service
metadata:
  name: nginx-headless
  labels:
    app: nginx
    demo: statefulset
spec:
  ports:
  - port: 80
    name: web
  clusterIP: None 
  selector:
    app: nginx
    demo: statefulset
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nginx
spec:
  selector:
    matchLabels:
      app: nginx
      demo: statefulset # has to match .spec.template.metadata.labels
  serviceName: "nginx-headless"
  replicas: 3 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: nginx
        demo: statefulset # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: nginx
        image: registry.k8s.io/nginx-slim:0.24
        ports:
        - containerPort: 80
          name: web
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
  # Instead of creating a PVC resource, you can directly provide in statefulset
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "ebs-sc"
      resources:
        requests:
          storage: 1Gi

# clusterIP: None
# You need to attach headless service to statefulset. Why?
# headless service will have no ClusterIP. It will be attached to statefulset

# kubectl apply -f volumes/03-ebs-sc.yaml

# kubectl apply -f 18-statefulset.yaml

# kubectl get svc

# 	For statefulset, service will be created with ClusterIP as None

# kubectl get pods

# kubectl get pv,pvc

# kubectl get pods -o wide 


# kubectl exec -it nginx-0 -- bash

# apt install dnsutils -y
# nslookup nginx-headless

# nslookup will give pod ip address not ClusterIP address which is shown for deployment
# Giving pod ip address on nslookup is exactly required for databases
# When create request comes to one worker node,to sync that data to other worker nodes in the cluster it should know the other nodes available in the cluster.
# To get other nodes info it will nslookup on headless service

# So headless service is required in statefulset so that  it can update to other nodes using pod ipadresses.


# Deployment vs Statefulset
# ============================
# 1. Deployment is for stateless applications like frontend, backend, etc. Statefulset is for DB related applications like MySQL, ELK, Prometheus, Queue apps, etc.
# 2. Statefulset requires headless service and normal service to be attached. Deployment will not have stateless service
# 3. PV and PVC are mandatory to statefulset, they create individual storages for each pod. PV and PVC for deployment creates single storage
# 4. Statefulset pods will be created in orderly manner. Deployment pods will be created parellely
# 5. Deployment pods names are choosen random. Statefulset pods keep the same identity. like <statefulset-name>-0, -1, etc.

# For statefulset pods names will be unique not random because each pod in statefulset have seperate storage i.e., PV and PVC and
# if a pod is deleted it will be recreated with same old name not random name so that new pod can attach to the same storage/volume again

# kubectl delete -f 18-statefulset.yaml

# Statefulset requires normal service also for load balancing and  headless service  for clustering

