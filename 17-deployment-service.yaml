apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  # labels of deployment resource
  labels:
    app: nginx
    tier: frontend
    purpose: deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
      tier: frontend
      purpose: deployment
  template:
    metadata:
      labels:
        app: nginx
        tier: frontend
        purpose: deployment
    spec:
      containers:
      - name: nginx
        image: dath1/deployment:1.0
        ports:
        - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  name: nginx
spec:
  type: LoadBalancer
  selector: # labels are used as selectors
    app: nginx
    tier: frontend
    purpose: deployment
  ports:
  - protocol: TCP
    port: 80 # service port
    targetPort: 80
    nodePort: 30007

# build the image from DEPLOYMENT folder

# kubectl apply -f 17-deployment-service.yaml

# kubectl get svc

# kubectl get deployment

# kubectl get rs or kubectl get replicaset

# kubectl get pods

# To verify the replicaset updates the pods with another image version
# change the image name from 1.0 to 2.0

# kubectl apply -f 16-deployment.yaml

# Test with url http://<LB_DNS_NAME>:80
