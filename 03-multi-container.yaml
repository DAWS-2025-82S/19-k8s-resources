kind: Pod
apiVersion: v1
metadata:
  name: multi-containers
spec:
  containers:
  - name: nginx
    image: nginx
  - name: almalinux
    image: almalinux:9
    command: ["sleep", "1000"]

# kubectl apply -f 03-multicontainer.yaml
# kubectl get pods
# CrashLoopBackOff -- error when failed to create container for almalinux:9 image

# It failed becuse it won't run in infinite loop , command is added to run for 1000 seconds

# kubectl pod describe <pod-name>  -- to get the details of pod like which container is failing  in a pod

# # If one container failed we need to delete the pod and create it again
# kubectl delete -f 03-multi-container.yaml   

# kubectl exec -it <pod-name> -- bash

# kubectl exec -it multi-containers -- bash

# curl  localhost

# By default it will connect to first container
# To connect to second contianer

# kubectl exec -it <pod-name> -c <container-name> -- bash

# kubectl exec -it multi-containers -c almalinux -- bash

# curl localhost

# curl output will be same because "all conatiners in pod share the same ip and storage"

# pod or container is ephemeral

# when pod is deleted application logs created by first container will also get deleted 
# so we will create second container(sidecar container) to push the logs to ELK
#  to reduce the load on first container
